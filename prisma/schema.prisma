generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model academy {
  id      String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name    String @db.VarChar(255)
  user_id String @db.Uuid
  user    user   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  team    team[]
}

model attendance {
  id        String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  player_id String  @db.Uuid
  event_id  String  @db.Uuid
  attended  Boolean
  event     event   @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  player    player  @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model coach {
  id               String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id          String             @db.Uuid
  team_id          String             @db.Uuid
  team             team               @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user               @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  training_program training_program[]
}

model event {
  id          String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String       @db.VarChar(255)
  description String?
  date        DateTime     @db.Date
  team_id     String       @db.Uuid
  attendance  attendance[]
  team        team         @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model exercise {
  id                  String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                String           @db.VarChar(255)
  description         String?
  training_program_id String           @db.Uuid
  training_program    training_program @relation(fields: [training_program_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model player {
  id                      String                    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id                 String                    @db.Uuid
  team_id                 String                    @db.Uuid
  attendance              attendance[]
  team                    team                      @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                    user                      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  player_training_program player_training_program[]
}

model player_training_program {
  id                  String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  player_id           String           @db.Uuid
  training_program_id String           @db.Uuid
  player              player           @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  training_program    training_program @relation(fields: [training_program_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model team {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name       String   @db.VarChar(255)
  academy_id String   @db.Uuid
  coach      coach[]
  event      event[]
  player     player[]
  academy    academy  @relation(fields: [academy_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model training_program {
  id                      String                    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                    String                    @db.VarChar(255)
  description             String?
  coach_id                String                    @db.Uuid
  exercise                exercise[]
  player_training_program player_training_program[]
  coach                   coach                     @relation(fields: [coach_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  academy     academy[]
  coach       coach[]
  player      player[]
}
